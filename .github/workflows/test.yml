name: Tests

on:
  push:
    branches: [ main, develop, "claude/**" ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run code quality checks
        run: |
          # Black formatting check
          black --check --diff graph_mesh_* tests/

          # isort import sorting check
          isort --check-only --diff graph_mesh_* tests/

          # flake8 linting
          flake8 graph_mesh_* tests/ --max-line-length=100 --extend-ignore=E203,W503

      - name: Run type checking
        continue-on-error: true
        run: |
          mypy graph_mesh_core/ graph_mesh_ingest/ graph_mesh_aligner/ graph_mesh_orchestrator/ || true

      - name: Run tests with coverage
        run: |
          pytest --cov --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.10'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            htmlcov/
            coverage.xml
            .coverage

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run integration tests
        run: |
          pytest -v -m integration || echo "No integration tests yet"

      - name: Build Docker images
        run: |
          docker compose build

      - name: Verify Docker images
        run: |
          docker images | grep graph-mesh
