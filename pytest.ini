[pytest]
# Pytest configuration for graph-mesh testing

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directory configuration
testpaths = tests
norecursedirs = .git .tox dist build *.egg __pycache__ .venv venv docker

# Output and reporting
addopts =
    --verbose
    --strict-markers
    --tb=short
    --cov=graph_mesh_core
    --cov=graph_mesh_ingest
    --cov=graph_mesh_orchestrator
    --cov=graph_mesh_aligner
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=70

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for full pipeline
    slow: Tests that take significant time to run
    docker: Tests that require Docker daemon
    property: Property-based tests with hypothesis
    xsd: Tests related to XSD conversion
    json: Tests related to JSON Schema conversion
    ontology: Tests related to ontology operations
    matcher: Tests for alignment matchers

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (prevent hanging)
timeout = 300

# Disable warnings for cleaner output (optional)
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
